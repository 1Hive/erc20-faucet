{
  "contractName": "TimeHelpers",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/TimeHelpers.sol\":\"TimeHelpers\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/TimeHelpers.sol\":{\"keccak256\":\"0x74a900d20e1b1f9729d119ff1c37db1c3c253a4abfd33f9ea704ebbfa3939120\",\"urls\":[\"bzzr://5f88b298eff38b6578c12d3fb613ed2982ddd275142fc8396b18bb959aec5360\"]},\"/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/Uint256Helpers.sol\":{\"keccak256\":\"0x9b22131e343305f10c088be545cd14d552c3e08b84fefd6cd45c21ffce29cff8\",\"urls\":[\"bzzr://d0bc65b915314e19dfde57e14192b034ed2a08a3fa4f25497687fa0d90906aaa\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a723058205bcc77c936cc1ae75a582837a6ba928a101acadca132ac7fbc58b5155030b8640029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a723058205bcc77c936cc1ae75a582837a6ba928a101acadca132ac7fbc58b5155030b8640029",
  "sourceMap": "216:654:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;216:654:6;;;;;;;",
  "deployedSourceMap": "216:654:6:-;;;;;",
  "source": "// Brought from https://github.com/aragon/aragonOS/blob/v4.3.0/contracts/common/TimeHelpers.sol\n// Adapted to use pragma ^0.5.8 and satisfy our linter rules\n\npragma solidity ^0.5.8;\n\nimport \"./Uint256Helpers.sol\";\n\n\ncontract TimeHelpers {\n    using Uint256Helpers for uint256;\n\n    /**\n    * @dev Returns the current block number.\n    *      Using a function rather than `block.number` allows us to easily mock the block number in\n    *      tests.\n    */\n    function getBlockNumber() internal view returns (uint256) {\n        return block.number;\n    }\n\n    /**\n    * @dev Returns the current timestamp.\n    *      Using a function rather than `block.timestamp` allows us to easily mock it in\n    *      tests.\n    */\n    function getTimestamp() internal view returns (uint256) {\n        return block.timestamp; // solium-disable-line security/no-block-members\n    }\n}\n",
  "sourcePath": "/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/TimeHelpers.sol",
  "ast": {
    "absolutePath": "/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/TimeHelpers.sol",
    "exportedSymbols": {
      "TimeHelpers": [
        1049
      ]
    },
    "id": 1050,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1026,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "158:23:6"
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/Uint256Helpers.sol",
        "file": "./Uint256Helpers.sol",
        "id": 1027,
        "nodeType": "ImportDirective",
        "scope": 1050,
        "sourceUnit": 1109,
        "src": "183:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1049,
        "linearizedBaseContracts": [
          1049
        ],
        "name": "TimeHelpers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1030,
            "libraryName": {
              "contractScope": null,
              "id": 1028,
              "name": "Uint256Helpers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1108,
              "src": "249:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uint256Helpers_$1108",
                "typeString": "library Uint256Helpers"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "243:33:6",
            "typeName": {
              "id": 1029,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "268:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "518:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1656,
                      "src": "535:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "535:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1034,
                  "id": 1037,
                  "nodeType": "Return",
                  "src": "528:19:6"
                }
              ]
            },
            "documentation": "@dev Returns the current block number.\n     Using a function rather than `block.number` allows us to easily mock the block number in\n     tests.",
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:6"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "509:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "508:9:6"
            },
            "scope": 1049,
            "src": "460:94:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "780:88:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1044,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1656,
                      "src": "797:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "797:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1043,
                  "id": 1046,
                  "nodeType": "Return",
                  "src": "790:22:6"
                }
              ]
            },
            "documentation": "@dev Returns the current timestamp.\n     Using a function rather than `block.timestamp` allows us to easily mock it in\n     tests.",
            "id": 1048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:2:6"
            },
            "returnParameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "771:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "770:9:6"
            },
            "scope": 1049,
            "src": "724:144:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1050,
        "src": "216:654:6"
      }
    ],
    "src": "158:713:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/TimeHelpers.sol",
    "exportedSymbols": {
      "TimeHelpers": [
        1049
      ]
    },
    "id": 1050,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1026,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "158:23:6"
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/token-faucet/contracts/os/Uint256Helpers.sol",
        "file": "./Uint256Helpers.sol",
        "id": 1027,
        "nodeType": "ImportDirective",
        "scope": 1050,
        "sourceUnit": 1109,
        "src": "183:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1049,
        "linearizedBaseContracts": [
          1049
        ],
        "name": "TimeHelpers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1030,
            "libraryName": {
              "contractScope": null,
              "id": 1028,
              "name": "Uint256Helpers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1108,
              "src": "249:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uint256Helpers_$1108",
                "typeString": "library Uint256Helpers"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "243:33:6",
            "typeName": {
              "id": 1029,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "268:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "518:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1656,
                      "src": "535:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "535:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1034,
                  "id": 1037,
                  "nodeType": "Return",
                  "src": "528:19:6"
                }
              ]
            },
            "documentation": "@dev Returns the current block number.\n     Using a function rather than `block.number` allows us to easily mock the block number in\n     tests.",
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:6"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "509:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "508:9:6"
            },
            "scope": 1049,
            "src": "460:94:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "780:88:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1044,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1656,
                      "src": "797:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "797:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1043,
                  "id": 1046,
                  "nodeType": "Return",
                  "src": "790:22:6"
                }
              ]
            },
            "documentation": "@dev Returns the current timestamp.\n     Using a function rather than `block.timestamp` allows us to easily mock it in\n     tests.",
            "id": 1048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:2:6"
            },
            "returnParameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "771:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "770:9:6"
            },
            "scope": 1049,
            "src": "724:144:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1050,
        "src": "216:654:6"
      }
    ],
    "src": "158:713:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-15T15:17:07.113Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}